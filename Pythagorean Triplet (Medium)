Companies Asked : Amazon Adobe

// Java Code : 
class Solution {
    boolean pythagoreanTriplet(int[] arr) {
        // code here
        int n = arr.length;
        
        // Approach 1 - O(n^3)
        for(int i = 0; i < n; i++){
            for(int j = i + 1; j < n; j++){
                for(int k = j + 1; k < n; k++){
                    if((arr[i] * arr[i] + arr[j] * arr[j]) == arr[k] * arr[k]){
                        return true;        
                    }
                }
            }
        }

        // Approach 2 - O(n^2)        
        HashSet<Integer> set = new HashSet<>();
        
        for(int i = 0; i < n; i++){
            int sq = arr[i] * arr[i];
            set.add(sq);
        }
        
        for(int i = 0; i < n; i++){
            for(int j = i; j < n; j++){
                int k = arr[i] * arr[i] + arr[j] * arr[j];
                if(set.contains(k)) return true;
            }
        }
        
        return false;
    }
}

// C++ Code : 
#include <unordered_set>
#include <vector>

class Solution {
public:
    bool pythagoreanTriplet(std::vector<int>& arr) {
        int n = arr.size();

        // Approach 1 - O(n^3) Brute Force
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                for (int k = j + 1; k < n; k++) {
                    if ((arr[i] * arr[i] + arr[j] * arr[j]) == arr[k] * arr[k]) {
                        return true;
                    }
                }
            }
        }

        // Approach 2 - O(n^2) using HashSet
        std::unordered_set<int> squares;
        for (int i = 0; i < n; i++) {
            squares.insert(arr[i] * arr[i]);
        }

        for (int i = 0; i < n; i++) {
            for (int j = i; j < n; j++) {
                int sumSq = arr[i] * arr[i] + arr[j] * arr[j];
                if (squares.find(sumSq) != squares.end()) {
                    return true;
                }
            }
        }

        return false;
    }
};
